package cn.it.bos.domain.user;
// Generated 2016-12-21 22:50:21 by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;

import cn.it.bos.domain.auth.Role;
import cn.it.bos.domain.bc.Standard;
import cn.it.bos.domain.bpm.Application;
import cn.it.bos.domain.qp.NoticeBill;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "mavenbos")
public class User implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2160066179999854852L;
	private String id;
	private String username;
	private String password;
	private String gender;
	private Date birthday;
	private Double salary;
	private String station;
	private String telephone;
	private String remark;
	private String salt;//密码加密使用的盐
	private Boolean locked =false;//账户是否锁定标志
	private Application application;
	private Set<Group> groups = new HashSet<Group>(0); //关联的用户组
	public User(Boolean locked) {
		super();
		this.locked = locked;
	}

	@Column(name = "locked")
	public Boolean getLocked() {
		return locked;
	}

	public void setLocked(Boolean locked) {
		this.locked = locked;
	}

	private Set<Standard> standards = new HashSet<Standard>(0);
	private Set<NoticeBill> noticeBills = new HashSet<NoticeBill>(0);
	private Set<Role> roles = new HashSet<Role>(0);

	public User() {
	}

	public User(String id) {
		this.id = id;
	}

	@GenericGenerator(name = "generator", strategy = "uuid")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false, length = 32)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "username", length = 20)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", length = 32)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "gender", length = 1)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "birthday", length = 19)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Column(name = "salary", precision = 22, scale = 0)
	public Double getSalary() {
		return this.salary;
	}

	public void setSalary(Double salary) {
		this.salary = salary;
	}

	@Column(name = "station", length = 40)
	public String getStation() {
		return this.station;
	}

	public void setStation(String station) {
		this.station = station;
	}

	@Column(name = "telephone", length = 40)
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@Column(name = "remark")
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Standard> getStandards() {
		return this.standards;
	}

	public void setStandards(Set<Standard> standards) {
		this.standards = standards;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<NoticeBill> getNoticeBills() {
		return this.noticeBills;
	}

	public void setNoticeBills(Set<NoticeBill> noticeBills) {
		this.noticeBills = noticeBills;
	}

	@ManyToMany( fetch = FetchType.LAZY)
	@JoinTable(name = "user_role", catalog = "mavenbos", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "role_id", nullable = false, updatable = false) })
	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	@Column(name = "salt",length=100)
	public String getSalt() {
		return salt;
	}

	public User(String id, String username, String password, String gender, Date birthday, Double salary,
			String station, String telephone, String remark, String salt, Boolean locked, Set<Standard> standards,
			Set<NoticeBill> noticeBills, Set<Role> roles) {
		super();
		this.id = id;
		this.username = username;
		this.password = password;
		this.gender = gender;
		this.birthday = birthday;
		this.salary = salary;
		this.station = station;
		this.telephone = telephone;
		this.remark = remark;
		this.salt = salt;
		this.locked = locked;
		this.standards = standards;
		this.noticeBills = noticeBills;
		this.roles = roles;
	}


	public void setSalt(String salt) {
		this.salt = salt;
	}
	@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="user_group", catalog="mavenbos", joinColumns = { 
        @JoinColumn(name="user_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="group_id", nullable=false, updatable=false) })
	public Set<Group> getGroups() {
		return groups;
	}

	public void setGroups(Set<Group> groups) {
		this.groups = groups;
	}

	@Override
	public String toString() {
		return "User [id=" + id + ", username=" + username + ", password=" + password + ", gender=" + gender
				+ ", birthday=" + birthday + ", salary=" + salary + ", station=" + station + ", telephone=" + telephone
				+ ", remark=" + remark + ", salt=" + salt + ", locked=" + locked + ", application=" + application
				+ ", groups=" + groups + ", standards=" + standards + ", noticeBills=" + noticeBills + ", roles="
				+ roles + "]";
	}


}
