package cn.it.bos.domain.bc;
// Generated 2016-12-21 22:50:21 by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.apache.struts2.json.annotations.JSON;
import org.hibernate.annotations.GenericGenerator;

import cn.it.bos.domain.user.User;

/**
 * Standard generated by hbm2java
 */
@Entity
@Table(name="bc_standard"
    ,catalog="mavenbos"
)
public class Standard  implements java.io.Serializable {


     private String id;
     private User user;
     private String name;
     private Double minweight;
     private Double maxweight;
     private Double minlength;
     private Double maxlength;
     
     @Column(name="minlength", precision=22, scale=0)
     public Double getMinlength() {
		return minlength;
	}


	public void setMinlength(Double minlength) {
		this.minlength = minlength;
	}

	@Column(name="maxlength", precision=22, scale=0)
	public Double getMaxlength() {
		return maxlength;
	}


	public void setMaxlength(Double maxlength) {
		this.maxlength = maxlength;
	}

	private String deltag;
     private Date updatetime;
     private Set<Staff> staffs = new HashSet<Staff>(0);

    public Standard() {
    }

	
    public Standard(String id, Date updatetime) {
        this.id = id;
        this.updatetime = updatetime;
    }
    public Standard(String id, User user, String name, Double minweight, Double maxweight, String deltag, Date updatetime, Set<Staff> staffs) {
       this.id = id;
       this.user = user;
       this.name = name;
       this.minweight = minweight;
       this.maxweight = maxweight;
       this.deltag = deltag;
       this.updatetime = updatetime;
       this.staffs = staffs;
    }
   
    @GenericGenerator(name="generator", strategy="uuid")@Id @GeneratedValue(generator="generator")
    @Column(name="id", unique=true, nullable=false, length=32)
    public String getId() {
        return this.id;
    }
    
    public void setId(String id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id")
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }
    
    @Column(name="name", length=30)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="minweight", precision=22, scale=0)
    public Double getMinweight() {
        return this.minweight;
    }
    
    public void setMinweight(Double minweight) {
        this.minweight = minweight;
    }
    
    @Column(name="maxweight", precision=22, scale=0)
    public Double getMaxweight() {
        return this.maxweight;
    }
    
    public void setMaxweight(Double maxweight) {
        this.maxweight = maxweight;
    }
    
    @Column(name="deltag", length=1)
    public String getDeltag() {
        return this.deltag;
    }
    
    public void setDeltag(String deltag) {
        this.deltag = deltag;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updatetime", nullable=false, length=19)
    public Date getUpdatetime() {
        return this.updatetime;
    }
    
    public void setUpdatetime(Date updatetime) {
        this.updatetime = updatetime;
    }
    @JSON(serialize=false)
@OneToMany( fetch=FetchType.LAZY, mappedBy="standard")
    public Set<Staff> getStaffs() {
        return this.staffs;
    }
    
    public void setStaffs(Set<Staff> staffs) {
        this.staffs = staffs;
    }




}


